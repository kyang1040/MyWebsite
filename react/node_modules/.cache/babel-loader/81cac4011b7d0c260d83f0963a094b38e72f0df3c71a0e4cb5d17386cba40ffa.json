{"ast":null,"code":"var _jsxFileName = \"/Users/kevinyang/Documents/MyWebsite-1/react/src/pages/Hobbies.js\",\n  _s = $RefreshSig$();\n// Hobbies.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { X, ChevronDown, ChevronUp } from \"lucide-react\";\nimport \"../styling/Hobbies.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hobbies = () => {\n  _s();\n  const [stats, setStats] = useState({});\n  const [videos, setVideos] = useState({});\n  const [error, setError] = useState(null);\n  const [yearToggles, setYearToggles] = useState({});\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const imagePaths = [\"/misc/Baseball/Images/Little_Pitch.JPG\", \"/misc/Baseball/Images/Cooperstown.JPEG\", \"/misc/Baseball/Images/Westfield_Pitch.JPEG\", \"/misc/Baseball/Images/Team_Pic.PNG\", \"/misc/Baseball/Images/MVP.JPG\"];\n  const years = [\"2014\", \"2015\", \"2016\", \"College\"];\n  useEffect(() => {\n    const loadContent = async () => {\n      try {\n        const statsData = {};\n        // Fetch stats only for 2014, 2015, 2016\n        for (const year of years.filter(y => y !== \"College\")) {\n          statsData[year] = await fetchStats(`/misc/Baseball/Stats/game_data_${year}_stats.txt`);\n        }\n        setStats(statsData);\n        const videoData = await fetchVideoData();\n        setVideos(videoData);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadContent();\n  }, []);\n  const fetchStats = async path => {\n    try {\n      const response = await fetch(path);\n      if (!response.ok) throw new Error(`Failed to fetch stats from ${path}`);\n      const text = await response.text();\n      return text.split(\"\\n\").filter(line => line);\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  };\n  const fetchVideoData = async () => {\n    try {\n      const response = await fetch(\"/misc/Baseball/video_file_list.json\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      return await response.json();\n    } catch (err) {\n      setError(err.message);\n      return {};\n    }\n  };\n\n  // 1) If a year is toggled open and we click \"College\",\n  //    it closes the toggled year, just like toggling from 2014->2015.\n  const toggleYear = year => {\n    // Same \"close all\" logic for any year\n    setYearToggles(prev => Object.keys(prev).reduce((acc, key) => {\n      acc[key] = false;\n      return acc;\n    }, {}));\n    if (year === \"College\") {\n      // Open the modal immediately\n      openModal(\"College\", \"College\");\n      return;\n    }\n    // Otherwise, open that year's dropdown\n    setYearToggles(prev => ({\n      ...prev,\n      [year]: true\n    }));\n  };\n\n  // 2) Opening the modal locks body scroll\n  const openModal = (year, category) => {\n    setActiveYear(year);\n    setActiveCategory(category);\n    setModalIsOpen(true);\n    document.body.style.overflow = \"hidden\";\n  };\n\n  // 2) & 5) On close, untoggle year + re-enable body scroll\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setActiveYear(null);\n    setActiveCategory(null);\n    // All years get untoggled on close\n    setYearToggles({});\n    document.body.style.overflow = \"unset\";\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading baseball memories...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hobbies-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Baseball Throughout the Years...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-gallery\",\n        children: imagePaths.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-card\",\n          onClick: () => setSelectedImage(image),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: `Baseball moment ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"years-grid\",\n        children: years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleYear(year),\n            className: `year-button ${yearToggles[year] ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), year !== \"College\" && (yearToggles[year] ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), year !== \"College\" && yearToggles[year] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [\"Stats\", \"Singles\", \"Doubles\", \"Triples\", \"Homeruns\"].map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, category),\n              className: \"dropdown-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plus-icon\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 25\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\"\n          // Stop click from closing; user can only press \"X\"\n          ,\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(ContentSection, {\n              year: activeYear,\n              category: activeCategory,\n              stats: stats,\n              videos: videos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightbox\",\n        onClick: () => setSelectedImage(null),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedImage,\n          alt: \"Enlarged view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-toast\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Hobbies, \"MCKsvWH9v7FrhFv0UEMw6g5b8/A=\");\n_c = Hobbies;\nconst ContentSection = ({\n  year,\n  category,\n  stats,\n  videos\n}) => {\n  if (year === \"College\" && category === \"College\") {\n    const videoList = videos[\"College\"] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"College Highlights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: videoList.map((vid, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            src: `/misc/Baseball/College/${vid}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  if (category === \"Stats\") {\n    const textLines = stats[year] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [year, \" Statistics\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-list\",\n        children: textLines.map((line, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: line\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this);\n  }\n  const videoPathKey = `${year}/${category}`;\n  const videoList = videos[videoPathKey] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [category, \" - \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: videoList.map((vid, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          src: `/misc/Baseball/${videoPathKey}/${vid}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ContentSection;\nexport default Hobbies;\nvar _c, _c2;\n$RefreshReg$(_c, \"Hobbies\");\n$RefreshReg$(_c2, \"ContentSection\");","map":{"version":3,"names":["React","useState","useEffect","X","ChevronDown","ChevronUp","jsxDEV","_jsxDEV","Hobbies","_s","stats","setStats","videos","setVideos","error","setError","yearToggles","setYearToggles","modalIsOpen","setModalIsOpen","activeYear","setActiveYear","activeCategory","setActiveCategory","selectedImage","setSelectedImage","loading","setLoading","imagePaths","years","loadContent","statsData","year","filter","y","fetchStats","videoData","fetchVideoData","path","response","fetch","ok","Error","text","split","line","err","message","json","toggleYear","prev","Object","keys","reduce","acc","key","openModal","category","document","body","style","overflow","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","onClick","src","alt","e","stopPropagation","ContentSection","_c","videoList","vid","idx","controls","textLines","videoPathKey","_c2","$RefreshReg$"],"sources":["/Users/kevinyang/Documents/MyWebsite-1/react/src/pages/Hobbies.js"],"sourcesContent":["// Hobbies.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { X, ChevronDown, ChevronUp } from \"lucide-react\";\nimport \"../styling/Hobbies.css\";\n\nconst Hobbies = () => {\n  const [stats, setStats] = useState({});\n  const [videos, setVideos] = useState({});\n  const [error, setError] = useState(null);\n  const [yearToggles, setYearToggles] = useState({});\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const imagePaths = [\n    \"/misc/Baseball/Images/Little_Pitch.JPG\",\n    \"/misc/Baseball/Images/Cooperstown.JPEG\",\n    \"/misc/Baseball/Images/Westfield_Pitch.JPEG\",\n    \"/misc/Baseball/Images/Team_Pic.PNG\",\n    \"/misc/Baseball/Images/MVP.JPG\",\n  ];\n\n  const years = [\"2014\", \"2015\", \"2016\", \"College\"];\n\n  useEffect(() => {\n    const loadContent = async () => {\n      try {\n        const statsData = {};\n        // Fetch stats only for 2014, 2015, 2016\n        for (const year of years.filter((y) => y !== \"College\")) {\n          statsData[year] = await fetchStats(\n            `/misc/Baseball/Stats/game_data_${year}_stats.txt`\n          );\n        }\n        setStats(statsData);\n\n        const videoData = await fetchVideoData();\n        setVideos(videoData);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadContent();\n  }, []);\n\n  const fetchStats = async (path) => {\n    try {\n      const response = await fetch(path);\n      if (!response.ok) throw new Error(`Failed to fetch stats from ${path}`);\n      const text = await response.text();\n      return text.split(\"\\n\").filter((line) => line);\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  };\n\n  const fetchVideoData = async () => {\n    try {\n      const response = await fetch(\"/misc/Baseball/video_file_list.json\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      return await response.json();\n    } catch (err) {\n      setError(err.message);\n      return {};\n    }\n  };\n\n  // 1) If a year is toggled open and we click \"College\",\n  //    it closes the toggled year, just like toggling from 2014->2015.\n  const toggleYear = (year) => {\n    // Same \"close all\" logic for any year\n    setYearToggles((prev) =>\n      Object.keys(prev).reduce((acc, key) => {\n        acc[key] = false;\n        return acc;\n      }, {})\n    );\n\n    if (year === \"College\") {\n      // Open the modal immediately\n      openModal(\"College\", \"College\");\n      return;\n    }\n    // Otherwise, open that year's dropdown\n    setYearToggles((prev) => ({\n      ...prev,\n      [year]: true,\n    }));\n  };\n\n  // 2) Opening the modal locks body scroll\n  const openModal = (year, category) => {\n    setActiveYear(year);\n    setActiveCategory(category);\n    setModalIsOpen(true);\n    document.body.style.overflow = \"hidden\";\n  };\n\n  // 2) & 5) On close, untoggle year + re-enable body scroll\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setActiveYear(null);\n    setActiveCategory(null);\n    // All years get untoggled on close\n    setYearToggles({});\n    document.body.style.overflow = \"unset\";\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading baseball memories...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"hobbies-container\">\n      <div className=\"content-wrapper\">\n        <h1 className=\"main-title\">Baseball Throughout the Years...</h1>\n\n        {/* Image Gallery */}\n        <div className=\"image-gallery\">\n          {imagePaths.map((image, index) => (\n            <div\n              key={index}\n              className=\"image-card\"\n              onClick={() => setSelectedImage(image)}\n            >\n              <img src={image} alt={`Baseball moment ${index + 1}`} />\n              <div className=\"image-overlay\">\n                <span>View</span>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Years Grid */}\n        <div className=\"years-grid\">\n          {years.map((year) => (\n            <div key={year} className=\"year-card\">\n              <button\n                onClick={() => toggleYear(year)}\n                className={`year-button ${yearToggles[year] ? \"active\" : \"\"}`}\n              >\n                <span>{year}</span>\n                {/* Show up/down chevron for 2014/2015/2016 only */}\n                {year !== \"College\" &&\n                  (yearToggles[year] ? (\n                    <ChevronUp className=\"icon\" />\n                  ) : (\n                    <ChevronDown className=\"icon\" />\n                  ))}\n              </button>\n\n              {/* Sub-options appear if toggled (and not College) */}\n              {year !== \"College\" && yearToggles[year] && (\n                <div className=\"dropdown-menu\">\n                  {[\"Stats\", \"Singles\", \"Doubles\", \"Triples\", \"Homeruns\"].map(\n                    (category) => (\n                      <button\n                        key={category}\n                        onClick={() => openModal(year, category)}\n                        className=\"dropdown-item\"\n                      >\n                        <span className=\"plus-icon\">+</span>\n                        <span>{category}</span>\n                      </button>\n                    )\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* 3) & 5) Modal only closes with \"X\"; user can scroll the content inside */}\n        {modalIsOpen && (\n          <div className=\"modal-overlay\">\n            {/* \n              pointer-events: none on the overlay or removing\n              onClick here ensures we can't close by clicking outside \n            */}\n            <div\n              className=\"modal-content\"\n              // Stop click from closing; user can only press \"X\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <button className=\"modal-close\" onClick={closeModal}>\n                <X />\n              </button>\n              <div className=\"modal-body\">\n                <ContentSection\n                  year={activeYear}\n                  category={activeCategory}\n                  stats={stats}\n                  videos={videos}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Lightbox for images */}\n        {selectedImage && (\n          <div className=\"lightbox\" onClick={() => setSelectedImage(null)}>\n            <img src={selectedImage} alt=\"Enlarged view\" />\n          </div>\n        )}\n\n        {error && <div className=\"error-toast\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nconst ContentSection = ({ year, category, stats, videos }) => {\n  if (year === \"College\" && category === \"College\") {\n    const videoList = videos[\"College\"] || [];\n    return (\n      <div className=\"content-section\">\n        <h2>College Highlights</h2>\n        <div className=\"video-grid\">\n          {videoList.map((vid, idx) => (\n            <div key={idx} className=\"video-wrapper\">\n              <video controls src={`/misc/Baseball/College/${vid}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (category === \"Stats\") {\n    const textLines = stats[year] || [];\n    return (\n      <div className=\"content-section\">\n        <h2>{year} Statistics</h2>\n        <div className=\"stats-list\">\n          {textLines.map((line, idx) => (\n            <div key={idx} className=\"stat-item\">\n              {line}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  const videoPathKey = `${year}/${category}`;\n  const videoList = videos[videoPathKey] || [];\n  return (\n    <div className=\"content-section\">\n      <h2>\n        {category} - {year}\n      </h2>\n      <div className=\"video-grid\">\n        {videoList.map((vid, idx) => (\n          <div key={idx} className=\"video-wrapper\">\n            <video controls src={`/misc/Baseball/${videoPathKey}/${vid}`} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Hobbies;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}