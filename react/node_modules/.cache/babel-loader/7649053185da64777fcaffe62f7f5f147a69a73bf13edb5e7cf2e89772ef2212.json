{"ast":null,"code":"var _jsxFileName = \"/Users/kevinyang/Documents/MyWebsite-1/react/src/pages/Hobbies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../styling/Hobbies.css\";\n\n// Make sure to bind modal to your appElement (for accessibility)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactModal.setAppElement(\"#root\");\nconst Hobbies = () => {\n  _s();\n  const [stats, setStats] = useState({});\n  const [videos, setVideos] = useState({});\n  const [error, setError] = useState(null);\n\n  // Tracks which year is expanded (to show sub-options)\n  // Example structure: { \"2014\": true, \"2015\": false, ... }\n  const [yearToggles, setYearToggles] = useState({});\n\n  // We’ll open the same modal for stats, singles, doubles, etc.\n  // activeYear: which year is currently shown in the modal\n  // activeCategory: \"Stats\", \"Singles\", \"Doubles\", \"Triples\", or \"Homeruns\"\n  // For College, activeCategory might be \"College\"\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(null);\n\n  // 5 Images at the top\n  const imagePaths = [\"/misc/Baseball/Images/Little_Pitch.JPG\", \"/misc/Baseball/Images/Cooperstown.JPEG\", \"/misc/Baseball/Images/Westfield_Pitch.JPEG\", \"/misc/Baseball/Images/Team_Pic.PNG\", \"/misc/Baseball/Images/MVP.JPG\"];\n  const years = [\"2014\", \"2015\", \"2016\", \"College\"];\n\n  // ------------------- Data Fetching -------------------\n  const fetchStats = async path => {\n    try {\n      const response = await fetch(path);\n      if (!response.ok) throw new Error(`Failed to fetch stats from ${path}`);\n      const text = await response.text();\n      return text.split(\"\\n\").filter(line => line);\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  };\n  const fetchVideoData = async () => {\n    try {\n      const response = await fetch(\"/misc/Baseball/video_file_list.json\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      return await response.json();\n    } catch (err) {\n      setError(err.message);\n      return {};\n    }\n  };\n  useEffect(() => {\n    const loadContent = async () => {\n      const statsData = {};\n      // Only fetch stats for 2014, 2015, 2016\n      for (const year of years.filter(y => y !== \"College\")) {\n        statsData[year] = await fetchStats(`/misc/Baseball/Stats/game_data_${year}_stats.txt`);\n      }\n      setStats(statsData);\n      const videoData = await fetchVideoData();\n      setVideos(videoData);\n    };\n    loadContent();\n  }, []);\n\n  // ------------------- Toggle Logic -------------------\n  const toggleYear = year => {\n    // If it’s \"College,\" skip the toggle and open the modal immediately\n    if (year === \"College\") {\n      openModal(\"College\", \"College\");\n      return;\n    }\n    setYearToggles(prev => {\n      const isCurrentlyOpen = !!prev[year];\n      return {\n        ...prev,\n        [year]: !isCurrentlyOpen\n      };\n    });\n  };\n\n  // ------------------- Modal Logic -------------------\n  const openModal = (year, category) => {\n    setActiveYear(year);\n    setActiveCategory(category);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setActiveYear(null);\n    setActiveCategory(null);\n  };\n\n  // Returns the actual content (JSX) for the open modal\n  const getModalContent = () => {\n    if (!activeYear || !activeCategory) return null;\n\n    // College was clicked: show College videos\n    if (activeYear === \"College\" && activeCategory === \"College\") {\n      const videoList = videos[\"College\"] || [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"College Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-videos-row\",\n          children: videoList.length > 0 ? videoList.map((vid, idx) => /*#__PURE__*/_jsxDEV(\"video\", {\n            className: \"video\",\n            controls: true,\n            src: `/misc/Baseball/College/${vid}`\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No videos available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n\n    // For 2014, 2015, 2016 subcategories\n    if (activeCategory === \"Stats\") {\n      // Show the lines from stats\n      const textLines = stats[activeYear] || [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Stats for \", activeYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), textLines.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: textLines.map((line, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: line\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No stats available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this);\n    } else {\n      // Singles, Doubles, Triples, Homeruns\n      const videoPathKey = `${activeYear}/${activeCategory}`; // e.g. \"2014/Singles\"\n      const videoList = videos[videoPathKey] || [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [activeCategory, \" for \", activeYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-videos-row\",\n          children: videoList.length > 0 ? videoList.map((vid, idx) => /*#__PURE__*/_jsxDEV(\"video\", {\n            className: \"video\",\n            controls: true,\n            src: `/misc/Baseball/${videoPathKey}/${vid}`\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No videos available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // ------------------- Rendering -------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-gallery\",\n      children: imagePaths.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Photo ${index + 1}`,\n        className: \"gallery-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"years-row\",\n      children: years.map(year => {\n        const isOpen = !!yearToggles[year];\n\n        // For 2014, 2015, 2016: we’ll show sub-options if open\n        // For College: we skip sub-options\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"year-toggle-button\",\n            onClick: () => toggleYear(year),\n            children: [isOpen || year === \"College\" ? \"–\" : \"+\", \" \", year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), year !== \"College\" && isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"year-sub-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, \"Stats\"),\n              className: \"sub-option-button\",\n              children: \"+ Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, \"Singles\"),\n              className: \"sub-option-button\",\n              children: \"+ Singles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, \"Doubles\"),\n              className: \"sub-option-button\",\n              children: \"+ Doubles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, \"Triples\"),\n              className: \"sub-option-button\",\n              children: \"+ Triples\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(year, \"Homeruns\"),\n              className: \"sub-option-button\",\n              children: \"+ Homeruns\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: {\n        content: {\n          width: \"80vw\",\n          height: \"80vh\",\n          margin: \"auto\",\n          border: \"2px solid #2196f3\",\n          borderRadius: \"8px\",\n          backgroundColor: \"#ffffff\",\n          padding: \"20px\"\n        },\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n          zIndex: 9999\n        }\n      },\n      contentLabel: \"Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-modal-button\",\n        onClick: closeModal,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), getModalContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Hobbies, \"QB3I2TlPEnAVGcJb59HtW/CqVvk=\");\n_c = Hobbies;\nexport default Hobbies;\nvar _c;\n$RefreshReg$(_c, \"Hobbies\");","map":{"version":3,"names":["React","useState","useEffect","ReactModal","jsxDEV","_jsxDEV","setAppElement","Hobbies","_s","stats","setStats","videos","setVideos","error","setError","yearToggles","setYearToggles","modalIsOpen","setModalIsOpen","activeYear","setActiveYear","activeCategory","setActiveCategory","imagePaths","years","fetchStats","path","response","fetch","ok","Error","text","split","filter","line","err","message","fetchVideoData","json","loadContent","statsData","year","y","videoData","toggleYear","openModal","prev","isCurrentlyOpen","category","closeModal","getModalContent","videoList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","vid","idx","controls","src","textLines","videoPathKey","image","index","alt","isOpen","onClick","onRequestClose","style","content","width","height","margin","border","borderRadius","backgroundColor","padding","overlay","zIndex","contentLabel","_c","$RefreshReg$"],"sources":["/Users/kevinyang/Documents/MyWebsite-1/react/src/pages/Hobbies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../styling/Hobbies.css\";\n\n// Make sure to bind modal to your appElement (for accessibility)\nReactModal.setAppElement(\"#root\");\n\nconst Hobbies = () => {\n  const [stats, setStats] = useState({});\n  const [videos, setVideos] = useState({});\n  const [error, setError] = useState(null);\n\n  // Tracks which year is expanded (to show sub-options)\n  // Example structure: { \"2014\": true, \"2015\": false, ... }\n  const [yearToggles, setYearToggles] = useState({});\n\n  // We’ll open the same modal for stats, singles, doubles, etc.\n  // activeYear: which year is currently shown in the modal\n  // activeCategory: \"Stats\", \"Singles\", \"Doubles\", \"Triples\", or \"Homeruns\"\n  // For College, activeCategory might be \"College\"\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(null);\n\n  // 5 Images at the top\n  const imagePaths = [\n    \"/misc/Baseball/Images/Little_Pitch.JPG\",\n    \"/misc/Baseball/Images/Cooperstown.JPEG\",\n    \"/misc/Baseball/Images/Westfield_Pitch.JPEG\",\n    \"/misc/Baseball/Images/Team_Pic.PNG\",\n    \"/misc/Baseball/Images/MVP.JPG\",\n  ];\n\n  const years = [\"2014\", \"2015\", \"2016\", \"College\"];\n\n  // ------------------- Data Fetching -------------------\n  const fetchStats = async (path) => {\n    try {\n      const response = await fetch(path);\n      if (!response.ok) throw new Error(`Failed to fetch stats from ${path}`);\n      const text = await response.text();\n      return text.split(\"\\n\").filter((line) => line);\n    } catch (err) {\n      setError(err.message);\n      return [];\n    }\n  };\n\n  const fetchVideoData = async () => {\n    try {\n      const response = await fetch(\"/misc/Baseball/video_file_list.json\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      return await response.json();\n    } catch (err) {\n      setError(err.message);\n      return {};\n    }\n  };\n\n  useEffect(() => {\n    const loadContent = async () => {\n      const statsData = {};\n      // Only fetch stats for 2014, 2015, 2016\n      for (const year of years.filter((y) => y !== \"College\")) {\n        statsData[year] = await fetchStats(\n          `/misc/Baseball/Stats/game_data_${year}_stats.txt`\n        );\n      }\n      setStats(statsData);\n\n      const videoData = await fetchVideoData();\n      setVideos(videoData);\n    };\n    loadContent();\n  }, []);\n\n  // ------------------- Toggle Logic -------------------\n  const toggleYear = (year) => {\n    // If it’s \"College,\" skip the toggle and open the modal immediately\n    if (year === \"College\") {\n      openModal(\"College\", \"College\");\n      return;\n    }\n\n    setYearToggles((prev) => {\n      const isCurrentlyOpen = !!prev[year];\n      return {\n        ...prev,\n        [year]: !isCurrentlyOpen,\n      };\n    });\n  };\n\n  // ------------------- Modal Logic -------------------\n  const openModal = (year, category) => {\n    setActiveYear(year);\n    setActiveCategory(category);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setActiveYear(null);\n    setActiveCategory(null);\n  };\n\n  // Returns the actual content (JSX) for the open modal\n  const getModalContent = () => {\n    if (!activeYear || !activeCategory) return null;\n\n    // College was clicked: show College videos\n    if (activeYear === \"College\" && activeCategory === \"College\") {\n      const videoList = videos[\"College\"] || [];\n      return (\n        <div className=\"modal-content\">\n          <h2>College Videos</h2>\n          <div className=\"modal-videos-row\">\n            {videoList.length > 0 ? (\n              videoList.map((vid, idx) => (\n                <video\n                  key={idx}\n                  className=\"video\"\n                  controls\n                  src={`/misc/Baseball/College/${vid}`}\n                />\n              ))\n            ) : (\n              <p>No videos available</p>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    // For 2014, 2015, 2016 subcategories\n    if (activeCategory === \"Stats\") {\n      // Show the lines from stats\n      const textLines = stats[activeYear] || [];\n      return (\n        <div className=\"modal-content\">\n          <h2>Stats for {activeYear}</h2>\n          {textLines.length > 0 ? (\n            <ul>\n              {textLines.map((line, idx) => (\n                <li key={idx}>{line}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No stats available</p>\n          )}\n        </div>\n      );\n    } else {\n      // Singles, Doubles, Triples, Homeruns\n      const videoPathKey = `${activeYear}/${activeCategory}`; // e.g. \"2014/Singles\"\n      const videoList = videos[videoPathKey] || [];\n      return (\n        <div className=\"modal-content\">\n          <h2>\n            {activeCategory} for {activeYear}\n          </h2>\n          <div className=\"modal-videos-row\">\n            {videoList.length > 0 ? (\n              videoList.map((vid, idx) => (\n                <video\n                  key={idx}\n                  className=\"video\"\n                  controls\n                  src={`/misc/Baseball/${videoPathKey}/${vid}`}\n                />\n              ))\n            ) : (\n              <p>No videos available</p>\n            )}\n          </div>\n        </div>\n      );\n    }\n  };\n\n  // ------------------- Rendering -------------------\n  return (\n    <div className=\"container\">\n      {/* 1) Top row of 5 images */}\n      <div className=\"image-gallery\">\n        {imagePaths.map((image, index) => (\n          <img\n            key={index}\n            src={image}\n            alt={`Photo ${index + 1}`}\n            className=\"gallery-image\"\n          />\n        ))}\n      </div>\n\n      {/* 2) Row of years, centered */}\n      <div className=\"years-row\">\n        {years.map((year) => {\n          const isOpen = !!yearToggles[year];\n\n          // For 2014, 2015, 2016: we’ll show sub-options if open\n          // For College: we skip sub-options\n          return (\n            <div key={year} className=\"year-wrapper\">\n              <button\n                className=\"year-toggle-button\"\n                onClick={() => toggleYear(year)}\n              >\n                {isOpen || year === \"College\" ? \"–\" : \"+\"} {year}\n              </button>\n\n              {/* Sub-options (vertical list) for 2014, 2015, 2016 only */}\n              {year !== \"College\" && isOpen && (\n                <div className=\"year-sub-options\">\n                  <button\n                    onClick={() => openModal(year, \"Stats\")}\n                    className=\"sub-option-button\"\n                  >\n                    + Stats\n                  </button>\n                  <button\n                    onClick={() => openModal(year, \"Singles\")}\n                    className=\"sub-option-button\"\n                  >\n                    + Singles\n                  </button>\n                  <button\n                    onClick={() => openModal(year, \"Doubles\")}\n                    className=\"sub-option-button\"\n                  >\n                    + Doubles\n                  </button>\n                  <button\n                    onClick={() => openModal(year, \"Triples\")}\n                    className=\"sub-option-button\"\n                  >\n                    + Triples\n                  </button>\n                  <button\n                    onClick={() => openModal(year, \"Homeruns\")}\n                    className=\"sub-option-button\"\n                  >\n                    + Homeruns\n                  </button>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* 3) React Modal */}\n      <ReactModal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={{\n          content: {\n            width: \"80vw\",\n            height: \"80vh\",\n            margin: \"auto\",\n            border: \"2px solid #2196f3\",\n            borderRadius: \"8px\",\n            backgroundColor: \"#ffffff\",\n            padding: \"20px\",\n          },\n          overlay: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n            zIndex: 9999,\n          },\n        }}\n        contentLabel=\"Modal\"\n      >\n        <button className=\"close-modal-button\" onClick={closeModal}>\n          X\n        </button>\n        {getModalContent()}\n      </ReactModal>\n\n      {/* 4) Error Message */}\n      {error && <div className=\"error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Hobbies;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,wBAAwB;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,UAAU,CAACG,aAAa,CAAC,OAAO,CAAC;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACA;EACA;EACA;EACA,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMsB,UAAU,GAAG,CACjB,wCAAwC,EACxC,wCAAwC,EACxC,4CAA4C,EAC5C,oCAAoC,EACpC,+BAA+B,CAChC;EAED,MAAMC,KAAK,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;;EAEjD;EACA,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAI,CAAC;MAClC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8BJ,IAAI,EAAE,CAAC;MACvE,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,OAAOA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC;IAChD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZrB,QAAQ,CAACqB,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,OAAO,MAAMH,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZrB,QAAQ,CAACqB,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd,MAAMqC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,SAAS,GAAG,CAAC,CAAC;MACpB;MACA,KAAK,MAAMC,IAAI,IAAIjB,KAAK,CAACS,MAAM,CAAES,CAAC,IAAKA,CAAC,KAAK,SAAS,CAAC,EAAE;QACvDF,SAAS,CAACC,IAAI,CAAC,GAAG,MAAMhB,UAAU,CAChC,kCAAkCgB,IAAI,YACxC,CAAC;MACH;MACA/B,QAAQ,CAAC8B,SAAS,CAAC;MAEnB,MAAMG,SAAS,GAAG,MAAMN,cAAc,CAAC,CAAC;MACxCzB,SAAS,CAAC+B,SAAS,CAAC;IACtB,CAAC;IACDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,UAAU,GAAIH,IAAI,IAAK;IAC3B;IACA,IAAIA,IAAI,KAAK,SAAS,EAAE;MACtBI,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC;MAC/B;IACF;IAEA7B,cAAc,CAAE8B,IAAI,IAAK;MACvB,MAAMC,eAAe,GAAG,CAAC,CAACD,IAAI,CAACL,IAAI,CAAC;MACpC,OAAO;QACL,GAAGK,IAAI;QACP,CAACL,IAAI,GAAG,CAACM;MACX,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMF,SAAS,GAAGA,CAACJ,IAAI,EAAEO,QAAQ,KAAK;IACpC5B,aAAa,CAACqB,IAAI,CAAC;IACnBnB,iBAAiB,CAAC0B,QAAQ,CAAC;IAC3B9B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM+B,UAAU,GAAGA,CAAA,KAAM;IACvB/B,cAAc,CAAC,KAAK,CAAC;IACrBE,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAM4B,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC/B,UAAU,IAAI,CAACE,cAAc,EAAE,OAAO,IAAI;;IAE/C;IACA,IAAIF,UAAU,KAAK,SAAS,IAAIE,cAAc,KAAK,SAAS,EAAE;MAC5D,MAAM8B,SAAS,GAAGxC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;MACzC,oBACEN,OAAA;QAAK+C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBpD,OAAA;UAAK+C,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BF,SAAS,CAACO,MAAM,GAAG,CAAC,GACnBP,SAAS,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBxD,OAAA;YAEE+C,SAAS,EAAC,OAAO;YACjBU,QAAQ;YACRC,GAAG,EAAE,0BAA0BH,GAAG;UAAG,GAHhCC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIT,CACF,CAAC,gBAEFpD,OAAA;YAAAgD,QAAA,EAAG;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAC1B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;;IAEA;IACA,IAAIpC,cAAc,KAAK,OAAO,EAAE;MAC9B;MACA,MAAM2C,SAAS,GAAGvD,KAAK,CAACU,UAAU,CAAC,IAAI,EAAE;MACzC,oBACEd,OAAA;QAAK+C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,GAAI,YAAU,EAAClC,UAAU;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9BO,SAAS,CAACN,MAAM,GAAG,CAAC,gBACnBrD,OAAA;UAAAgD,QAAA,EACGW,SAAS,CAACL,GAAG,CAAC,CAACzB,IAAI,EAAE2B,GAAG,kBACvBxD,OAAA;YAAAgD,QAAA,EAAenB;UAAI,GAAV2B,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAELpD,OAAA;UAAAgD,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAEV,CAAC,MAAM;MACL;MACA,MAAMQ,YAAY,GAAG,GAAG9C,UAAU,IAAIE,cAAc,EAAE,CAAC,CAAC;MACxD,MAAM8B,SAAS,GAAGxC,MAAM,CAACsD,YAAY,CAAC,IAAI,EAAE;MAC5C,oBACE5D,OAAA;QAAK+C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,GACGhC,cAAc,EAAC,OAAK,EAACF,UAAU;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACLpD,OAAA;UAAK+C,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BF,SAAS,CAACO,MAAM,GAAG,CAAC,GACnBP,SAAS,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBxD,OAAA;YAEE+C,SAAS,EAAC,OAAO;YACjBU,QAAQ;YACRC,GAAG,EAAE,kBAAkBE,YAAY,IAAIL,GAAG;UAAG,GAHxCC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIT,CACF,CAAC,gBAEFpD,OAAA;YAAAgD,QAAA,EAAG;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAC1B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;EACF,CAAC;;EAED;EACA,oBACEpD,OAAA;IAAK+C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAExBhD,OAAA;MAAK+C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B9B,UAAU,CAACoC,GAAG,CAAC,CAACO,KAAK,EAAEC,KAAK,kBAC3B9D,OAAA;QAEE0D,GAAG,EAAEG,KAAM;QACXE,GAAG,EAAE,SAASD,KAAK,GAAG,CAAC,EAAG;QAC1Bf,SAAS,EAAC;MAAe,GAHpBe,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNpD,OAAA;MAAK+C,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvB7B,KAAK,CAACmC,GAAG,CAAElB,IAAI,IAAK;QACnB,MAAM4B,MAAM,GAAG,CAAC,CAACtD,WAAW,CAAC0B,IAAI,CAAC;;QAElC;QACA;QACA,oBACEpC,OAAA;UAAgB+C,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACtChD,OAAA;YACE+C,SAAS,EAAC,oBAAoB;YAC9BkB,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAACH,IAAI,CAAE;YAAAY,QAAA,GAE/BgB,MAAM,IAAI5B,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACA,IAAI;UAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,EAGRhB,IAAI,KAAK,SAAS,IAAI4B,MAAM,iBAC3BhE,OAAA;YAAK+C,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BhD,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACJ,IAAI,EAAE,OAAO,CAAE;cACxCW,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC9B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpD,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACJ,IAAI,EAAE,SAAS,CAAE;cAC1CW,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC9B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpD,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACJ,IAAI,EAAE,SAAS,CAAE;cAC1CW,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC9B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpD,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACJ,IAAI,EAAE,SAAS,CAAE;cAC1CW,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC9B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpD,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACJ,IAAI,EAAE,UAAU,CAAE;cAC3CW,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC9B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA,GA1COhB,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2CT,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNpD,OAAA,CAACF,UAAU;MACTkE,MAAM,EAAEpD,WAAY;MACpBsD,cAAc,EAAEtB,UAAW;MAC3BuB,KAAK,EAAE;QACLC,OAAO,EAAE;UACPC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAE,SAAS;UAC1BC,OAAO,EAAE;QACX,CAAC;QACDC,OAAO,EAAE;UACPF,eAAe,EAAE,oBAAoB;UACrCG,MAAM,EAAE;QACV;MACF,CAAE;MACFC,YAAY,EAAC,OAAO;MAAA9B,QAAA,gBAEpBhD,OAAA;QAAQ+C,SAAS,EAAC,oBAAoB;QAACkB,OAAO,EAAErB,UAAW;QAAAI,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRP,eAAe,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAGZ5C,KAAK,iBAAIR,OAAA;MAAK+C,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAExC;IAAK;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACjD,EAAA,CAnRID,OAAO;AAAA6E,EAAA,GAAP7E,OAAO;AAqRb,eAAeA,OAAO;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}